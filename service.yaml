# Google Cloud Run service configuration for Holger Hahn Website
# Declarative service definition for consistent deployments

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: holger-hahn-website
  labels:
    app: holger-hahn-website
    environment: production
  annotations:
    run.googleapis.com/ingress: all
    run.googleapis.com/ingress-status: all
spec:
  template:
    metadata:
      labels:
        app: holger-hahn-website
        version: latest
      annotations:
        # Scaling configuration
        autoscaling.knative.dev/minScale: "0"
        autoscaling.knative.dev/maxScale: "10"
        
        # Resource configuration
        run.googleapis.com/cpu-throttling: "false"
        run.googleapis.com/memory: "512Mi"
        run.googleapis.com/cpu: "1000m"
        
        # Network configuration
        run.googleapis.com/execution-environment: gen2
        
        # Startup probe configuration
        run.googleapis.com/startup-cpu-boost: "true"
    spec:
      containerConcurrency: 100
      timeoutSeconds: 300
      serviceAccountName: holger-hahn-website@PROJECT_ID.iam.gserviceaccount.com
      containers:
      - name: holger-hahn-website
        image: gcr.io/PROJECT_ID/holger-hahn-website:latest
        ports:
        - name: http1
          containerPort: 8080
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: GIN_MODE
          value: "release"
        - name: PORT
          value: "8080"
        # Database configuration (to be updated with Turso URL)
        - name: DB_TYPE
          value: "libsql"
        - name: DB_CONNECTION_STRING
          value: "libsql://DATABASE_NAME-ORGANIZATION.turso.io?authToken=TOKEN"
        # Logging configuration
        - name: LOG_LEVEL
          value: "info"
        - name: LOG_FORMAT
          value: "json"
        resources:
          limits:
            cpu: "1000m"
            memory: "512Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 30
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
          failureThreshold: 30
  traffic:
  - percent: 100
    latestRevision: true